buildscript {
    repositories {
        maven {
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
java.withSourcesJar()

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            args "--username=InDev"

            jvmArg "-Dfml.coreMods.load=${mixin_loader_class}"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"
            jvmArg "-Dmixin.debug.export=true"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {

            jvmArg "-Dfml.coreMods.load=${mixin_loader_class}"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"
            jvmArg "-Dmixin.debug.export=true"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    maven  {
        url 'https://repo.spongepowered.org/maven'
    }
    maven {
        url 'http://chickenbones.net/maven'
        allowInsecureProtocol = true
    }
    maven {
        url 'http://maven.covers1624.net'
        allowInsecureProtocol = true
    }
    maven {
        url 'https://www.cursemaven.com'
    }
    maven {
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        url 'https://modmaven.k-4u.nl/'
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven {
        url 'https://maven.thiakil.com'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-public/'
    }
    maven {
        url 'http://maven.tterrag.com'
        allowInsecureProtocol = true
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    embed 'me.nallar.whocalled:WhoCalled:1.1'
    implementation fg.deobf('curse.maven:fermiumbooter-968474:5346592')

    compileOnly 'com.enderio.core:EnderCore:1.12.2-+'
    compileOnly ('com.enderio:EnderIO:1.12.2-+') {
        transitive = false
    }
    compileOnly 'codechicken:ChickenASM:1.12-1.0.2.9'
    compileOnly 'epicsquid.mysticallib:mysticallib:1.12.2-+'
    compileOnly 'mezz.jei:jei_1.12.2:4.15.0.293'
    compileOnly 'slimeknights.mantle:Mantle:1.12-1.3.3.55'
    compileOnly 'slimeknights:TConstruct:1.12.2-2.13.0.183'
    compileOnly 'betterwithmods:BetterWithMods:1.12-2.3.20-1030'

    compileOnly fg.deobf('codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal')
    compileOnly fg.deobf('com.azanor.baubles:Baubles:1.12-1.5.2')
    compileOnly fg.deobf('blusunrize:ImmersiveEngineering:0.12-92-+')

    compileOnly fg.deobf('curse.maven:astral-sorcery-241721:3044416')
    compileOnly fg.deobf('curse.maven:tfcraft-302973:3268988')
    compileOnly fg.deobf('curse.maven:foamfix-optimization-mod-278494:3327893')
    compileOnly fg.deobf('curse.maven:electroblobs-wizardry-265642:3189062')
    // deobfCompile 'curse.maven:qmd-362056:3474533'
    // deobfCompile 'cofh:CoFHCore:1.12.2-+:universal'
    // compile 'com.teamwizardry.librarianlib:librarianlib-1.12:4.0-SNAPSHOT:deobf'
    compileOnly fg.deobf('curse.maven:extra-utilities-225561:2678374')
    compileOnly fg.deobf('curse.maven:gottschcore-272450:3748293')
    compileOnly fg.deobf('curse.maven:treasure2-289760:3758107')
    compileOnly fg.deobf('curse.maven:time-speed-mod-221053:2991593')
    compileOnly fg.deobf('curse.maven:gregtech-ce-unofficial-557242:3745499')

    implementation ('org.spongepowered:mixin:0.8.5') {
        transitive = false
    }
    annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
    annotationProcessor 'com.google.guava:guava:24.1.1-jre'
    annotationProcessor 'com.google.code.gson:gson:2.8.6'
    annotationProcessor ('org.spongepowered:mixin:0.8.5') {
        transitive = false
    }
}

mixin {
    add sourceSets.main, 'mixins.' + 'normalasm' + '.refmap.json'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', minecraft_version

    filesMatching('mcmod.info') {
        expand 'version': project.version, 'mcversion': minecraft_version
    }
}

jar {
    from provider {
        configurations.embed.collect {it.isDirectory() ? it : zipTree(it)}
    }
    manifest {
        attributes([
                'FMLCorePluginContainsFMLMod': true,
                'FMLCorePlugin': "${mixin_loader_class}",
                'ForceLoadAsMod': project.gradle.startParameter.taskNames[0] == 'build',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'FMLAT': 'normalasm_at.cfg'
        ])
    }
}